openapi: "3.0.0"
info:
  title: Amun API
  version: 0.6.0-dev
servers:
  - url: /api/v1/
paths:
  /version:
    get:
      tags:
        - Service
      x-openapi-router-controller: amun.api_v1
      operationId: get_version
      summary: Get Amun API version.
      responses:
        '200':
          description: Successful response with service version identifier.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionResponse'
  /_debug/generate-dockerfile:
    post:
      tags:
        - Debug
      x-openapi-router-controller: amun.api_v1
      operationId: post_generate_dockerfile
      summary: |
        Generate Dockerfile as it would be generated internally for inspections.
      requestBody:
        required: true
        description: >-
          Specification of the software stack that should be created and
          verified.
        content:
          application/json:
            schema:
              x-body-name: specification
              $ref: '#/components/schemas/InspectionSpecification'
      responses:
        '202':
          description: Successful response with inspection id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InspectionGenerateDockerfileResponse'
        '400':
          description: On invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InspectionResponseError'
  /inspect:
    post:
      tags:
        - Inspection
      x-openapi-router-controller: amun.api_v1
      operationId: post_inspection
      summary: Inspect the given application stack.
      requestBody:
        required: true
        description: >-
          Specification of the software stack that should be created and
          verified.
        content:
          application/json:
            schema:
              x-body-name: specification
              $ref: '#/components/schemas/InspectionSpecification'
      responses:
        '202':
          description: Successful response with inspection id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InspectionResponse'
        '400':
          description: On invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InspectionResponseError'
    get:
      tags:
        - Inspection
      x-openapi-router-controller: amun.api_v1
      operationId: get_inspection
      summary: Get listing of inspections available.
      parameters:
        - name: page
          required: false
          description: Page number for the paginated response.
          in: query
          schema:
            type: integer
        - name: limit
          required: false
          description: Limit number of results in the paginated response (can be adjusted by backend).
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: Successful response with inspection id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InspectionListingResponse'

  '/inspect/{inspection_id}/build/log':
    get:
      tags:
        - Inspection
      x-openapi-router-controller: amun.api_v1
      operationId: get_inspection_build_log
      summary: Get log for a specific inspection build.
      parameters:
        - name: inspection_id
          in: path
          required: true
          description: Id of inspection build.
          schema:
            type: string
      responses:
        '200':
          description: Successful response with inspection build log.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InspectionBuildLogResponse'
        '400':
          description: On invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InspectionResponseError'
        '404':
          description: >-
            The given inspection build referenced by inspection id was not
            found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InspectionResponseError'
  '/inspect/{inspection_id}/job/batch-size':
    get:
      tags:
        - Inspection
      x-openapi-router-controller: amun.api_v1
      operationId: get_inspection_job_batch_size
      summary: Get batch size for the given inspection.
      parameters:
        - name: inspection_id
          in: path
          required: true
          description: Id of inspection run.
          schema:
            type: string
      responses:
        '200':
          description: Successful response with inspection batch size reported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InspectionJobBatchSizeResponse'
        '400':
          description: On invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InspectionResponseError'
        '404':
          description: The given inspection job referenced by inspection id was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InspectionResponseError'
  '/inspect/{inspection_id}/job/{item}/result':
    get:
      tags:
        - Inspection
      x-openapi-router-controller: amun.api_v1
      operationId: get_inspection_job_result
      summary: Get result of a specific inspection run.
      parameters:
        - name: inspection_id
          in: path
          required: true
          description: Id of inspection run.
          schema:
            type: string
        - name: item
          in: path
          required: true
          description: Inspection job (item from the batch) to retrieve logs for.
          schema:
            type: integer
      responses:
        '200':
          description: Successful response with inspection run log.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InspectionJobResultResponse'
        '400':
          description: On invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InspectionResponseError'
        '404':
          description: The given inspection job referenced by inspection id was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InspectionResponseError'
  '/inspect/{inspection_id}/job/{item}/log':
    get:
      tags:
        - Inspection
      x-openapi-router-controller: amun.api_v1
      operationId: get_inspection_job_log
      summary: Get log for a specific inspection run.
      parameters:
        - name: inspection_id
          in: path
          required: true
          description: Id of inspection run.
          schema:
            type: string
        - name: item
          in: path
          required: true
          description: Inspection job (item from the batch) to retrieve logs for.
          schema:
            type: integer
      responses:
        '200':
          description: Successful response with inspection run log.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InspectionJobLogResponse'
        '400':
          description: On invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InspectionResponseError'
        '404':
          description: The given inspection job referenced by inspection id was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InspectionResponseError'
  '/inspect/{inspection_id}/status':
    get:
      tags:
        - Inspection
      x-openapi-router-controller: amun.api_v1
      operationId: get_inspection_status
      summary: Get status of an inspection.
      parameters:
        - name: inspection_id
          in: path
          required: true
          description: Id of inspection run.
          schema:
            type: string
      responses:
        '200':
          description: Successful response with inspection status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InspectionStatusResponse'
        '400':
          description: On invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InspectionResponseError'
        '404':
          description: The given inspection with provided id was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InspectionResponseError'
  '/inspect/{inspection_id}/specification':
    get:
      tags:
        - Inspection
      x-openapi-router-controller: amun.api_v1
      operationId: get_inspection_specification
      summary: Get specification of the given inspection.
      parameters:
        - name: inspection_id
          in: path
          required: true
          description: Id of inspection run.
          schema:
            type: string
      responses:
        '200':
          description: Successful response with inspection specification.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InspectionSpecificationResponse'
        '400':
          description: On invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InspectionResponseError'
        '404':
          description: The given inspection with provided id was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InspectionResponseError'
components:
  schemas:
    InspectionResponseError:
      type: object
      required:
        - error
        - parameters
      properties:
        error:
          type: string
          description: Error information for user.
        parameters:
          type: object
          description: Parameters echoed back to user for debugging.
    InspectionBuildLogResponse:
      type: object
      description: Build logs for the given inspection.
      required:
        - log
        - parameters
      properties:
        log:
          type: string
          description: Inspection job logs printed to stdout/stderr as a plain text.
          nullable: true
        parameters:
          type: object
          description: Parameters echoed back to user for debugging.
    InspectionSpecification:
      type: object
      description: Specification of software stack for inspection.
      required:
        - base
      properties:
        base:
          type: string
          minLength: 1
          description: Base image on which the runtime environment should be based on.
          example: 'registry.access.redhat.com/ubi8/python-36'
        identifier:
          type: string
          description: >-
            A user-created string which will be inserted into the inspection id
            to distinguish different inspection runs.
          example: test
        package_manager:
          type: string
          description: Package manager to be used for installing dependencies.
          enum:
            - micropipenv
            - pipenv
          default: micropipenv
        batch_size:
          type: integer
          default: 1
          example: 1
          description: Number of inspection runs
        packages:
          type: array
          description: >-
            A list of native packages that should be installed into the runtime
            environment.
          items:
            type: string
            description: Name of the package to be installed.
            example: vim
        python_packages:
          type: array
          description: >-
            A list of python packages that should be installed into the runtime
            environment.
          items:
            type: string
            description: Name of the package to be installed.
            example: pipenv
        python:
          type: object
          description: Python application stack to be installed.
          additionalProperties: false
          required:
            - requirements
            - requirements_locked
          properties:
            requirements:
              type: object
              description: >-
                Pipfile stating software stack (direct dependencies) of an
                application.
              additionalProperties: {}
            requirements_locked:
              type: object
              description: Pipfile.lock with fully pinned down and resolved software stack.
              additionalProperties: {}
        build:
          type: object
          description: Hardware requirements for build time.
          additionalProperties: false
          properties:
            requests:
              type: object
              description: Requested hardware environment at build time.
              properties:
                cpu:
                  type: string
                  minLength: 1
                  description: CPU cores requested at build time.
                  example: "1"
                memory:
                  type: string
                  minLength: 1
                  description: CPU Memory requested at build time.
                  example: 1Gi
                hardware:
                  type: object
                  description: Set hardware requirements for build time.
                  required:
                    - cpu_family
                    - cpu_model
                    - processor
                  properties:
                    cpu_family:
                      type: integer
                      description: CPU family number from CPU proc info.
                      example: 6
                    cpu_model:
                      type: integer
                      description: Model number of CPU from CPU proc info.
                      example: 94
                    physical_cpus:
                      type: integer
                      description: Number of physical CPUs.
                      example: 32
                    processor:
                      type: string
                      description: Name of the CPU model name of CPU proc info.
                      example: Intel-Xeon-Processor-Skylake-IBRS
        run:
          type: object
          description: Hardware requirements for run time
          additionalProperties: false
          properties:
            requests:
              type: object
              description: Requested hardware environment for run time
              additionalProperties: false
              properties:
                cpu:
                  type: string
                  minLength: 1
                  description: CPU cores requested at run time
                  example: "1"
                memory:
                  type: string
                  minLength: 1
                  description: CPU Memory requested at run time
                  example: 512Mi
                hardware:
                  type: object
                  description: Set hardware requirements for run time.
                  required:
                    - cpu_family
                    - cpu_model
                    - processor
                  properties:
                    cpu_family:
                      type: integer
                      description: CPU family number from CPU proc info.
                      example: 6
                    cpu_model:
                      type: integer
                      description: Model number of CPU from CPU proc info.
                      example: 94
                    physical_cpus:
                      type: integer
                      description: Number of physical CPUs.
                      example: 32
                    processor:
                      type: string
                      description: Name of the CPU model name of CPU proc info.
                      example: Intel-Xeon-Processor-Skylake-IBRS
        files:
          type: array
          description: Files passed to the context.
          items:
            type: object
            additionalProperties: false
            required:
              - content
              - path
            properties:
              path:
                type: string
                minLength: 1
                description: >-
                  Name of the file including an absolute path (relative will be
                  taken from root).
              content:
                type: string
                minLength: 1
                description: A string holding actual content of the file.
        environment:
          type: array
          description: Environment variables supplied into the build process.
          items:
            type: object
            additionalProperties: false
            required:
              - name
              - value
            properties:
              name:
                type: string
                minLength: 1
                description: Name of the environment variable.
              value:
                type: string
                description: Value for the environment variable.
        script:
          type: string
          description: A script that should be executed in inspection run.
          example: |
            #!/usr/bin/bash
            echo "Here should be run tests..."
        update:
          type: boolean
          description: Perform native packages update.
        upgrade_pip:
          type: boolean
          description: Update pip before installing packages.
          default: False
        send_messages:
          type: boolean
          description: Send message upon completion.
          default: True
        force_sync:
          type: boolean
          description: Should graph-sync force sync these inspection results. (param of sent message)
    InspectionGenerateDockerfileResponse:
      type: object
      description: Response for a generated Dockerfile.
      additionalProperties: false
      properties:
        dockerfile:
          type: string
          description: Generated Dockerfile as a string.
        parameters:
          type: object
          description: |
            Parameters echoed back to user (with default parameters if omitted).
      required:
        - dockerfile
        - parameters
    InspectionJobBatchSizeResponse:
      type: object
      description: Response with job batch size requested.
      additionalProperties: false
      properties:
        batch_size:
          type: integer
          description: Batch size of the given inspection.
        parameters:
          type: object
          description: Parameters echoed back to user (with default parameters if omitted).
      required:
        - batch_size
        - parameters
    InspectionListingResponse:
      type: object
      description: Get listing of available inspections.
      additionalProperties: false
      properties:
        inspections:
          type: array
          description: >-
            A listing of inspections available.
          items:
            type: string
            description: An inspection identifier (inspection id).
            example: inspection-ABCXYZ
        parameters:
          type: object
          description: Parameters echoed back to user (with default parameters if omitted).
      required:
        - inspections
        - parameters
    InspectionResponse:
      type: object
      description: Response for a submitted inspection.
      additionalProperties: false
      properties:
        inspection_id:
          type: string
          description: >-
            An id of the submitted inspection for checking its status and its
            results.
          example: inspection-ABCXYZ
        parameters:
          type: object
          description: Parameters echoed back to user (with default parameters if omitted).
      required:
        - inspection_id
        - parameters
    InspectionJobLogResponse:
      type: object
      description: Job logs for the given inspection.
      required:
        - log
        - parameters
      properties:
        log:
          type: object
          description: Inspection job log printed to stdout/stderr as a plain text.
          nullable: true
          additionalProperties: false
          required:
            - exit_code
            - hwinfo
            - script_sha256
            - stderr
            - stdout
            - usage
            - os_release
            - runtime_environment
          properties:
            exit_code:
              type: integer
              description: >-
                Exit code of user provided script (matches exit code of the
                inspect job)
              example: 0
            hwinfo:
              type: object
              additionalProperties: true
              description: Hardware information as provided by Amun's hwinfo.
            script_sha256:
              type: string
              description: SHA 256 digest of user provided script
            stderr:
              type: string
              description: Standard error output produced by user provided script.
            stdout:
              type: object
              description: Standard output prodiced by user provided script.
              additionalProperties: true
            usage:
              type: object
              description: >
                Utilization of resources such as user-space or kernel-space CPU
                time, context switches, shared memory size or page faults (and
                others).
              additionalProperties: true
            os_release:
              type: object
              description: >-
                Information about operating system as gathered from
                /etc/os-release
              additionalProperties: true
              nullable: true
              properties:
                ansi_color:
                  type: string
                  example: 0;34
                bug_report_url:
                  type: string
                  example: 'https://bugzilla.redhat.com/'
                cpe_name:
                  type: string
                  example: 'cpe:/o:fedoraproject:fedora:29'
                documentation_url:
                  type: string
                  example: >-
                    https://docs.fedoraproject.org/en-US/fedora/f29/system-administrators-guide/
                home_url:
                  type: string
                  example: 'https://fedoraproject.org/'
                id:
                  type: string
                  example: fedora
                logo:
                  type: string
                name:
                  type: string
                  example: Fedora
                platform_id:
                  type: string
                  example: 'platform:f29'
                pretty_name:
                  type: string
                  example: Fedora 29 (Workstation Edition)
                privacy_policy_url:
                  type: string
                  example: 'https://fedoraproject.org/wiki/Legal:PrivacyPolicy'
                redhat_bugzilla_product:
                  type: string
                  example: Fedora
                redhat_bugzilla_product_version:
                  type: string
                  example: '29'
                redhat_support_product:
                  type: string
                  example: Fedora
                redhat_support_product_version:
                  type: string
                  example: '29'
                support_url:
                  type: string
                  example: >-
                    https://fedoraproject.org/wiki/Communicating_and_getting_help
                variant:
                  type: string
                  example: Workstation Edition
                variant_id:
                  type: string
                  example: workstation
                version:
                  type: string
                  example: 29 (Workstation Edition)
                version_codename:
                  type: string
                version_id:
                  type: string
                  example: '29'
            runtime_environment:
              type: object
              description: Runtime environment information.
              additionalProperties: true
              properties:
                cuda_version:
                  type: string
                  description: CUDA version installed.
                  nullable: true
                hardware:
                  type: object
                  description: Hardware information.
                  properties:
                    cpu_family:
                      type: integer
                    cpu_model:
                      type: integer
                operating_system:
                  type: object
                  description: OS information.
                  properties:
                    name:
                      type: string
                    version:
                      type: string
                python_version:
                  type: string
                  description: Python interpreter version.
        parameters:
          type: object
          description: Parameters echoed back to user for debugging.
    InspectionJobResultResponse:
      type: object
      description: Job result for the given inspection.
      required:
        - result
        - parameters
      properties:
        result:
          type: object
          description: Inspection job result.
          nullable: true
          additionalProperties: false
          required:
            - exit_code
            - hwinfo
            - script_sha256
            - stderr
            - stdout
            - usage
            - os_release
            - runtime_environment
          properties:
            exit_code:
              type: integer
              description: >-
                Exit code of user provided script (matches exit code of the
                inspect job)
              example: 0
            hwinfo:
              type: object
              additionalProperties: true
              description: Hardware information as provided by Amun's hwinfo.
            script_sha256:
              type: string
              description: SHA 256 digest of user provided script
            stderr:
              type: string
              description: Standard error output produced by user provided script.
            stdout:
              type: object
              description: Standard output prodiced by user provided script.
              additionalProperties: true
            usage:
              type: object
              description: >
                Utilization of resources such as user-space or kernel-space CPU
                time, context switches, shared memory size or page faults (and
                others).
              additionalProperties: true
            os_release:
              type: object
              description: >-
                Information about operating system as gathered from
                /etc/os-release
              additionalProperties: true
              nullable: true
              properties:
                ansi_color:
                  type: string
                  example: 0;34
                bug_report_url:
                  type: string
                  example: 'https://bugzilla.redhat.com/'
                cpe_name:
                  type: string
                  example: 'cpe:/o:fedoraproject:fedora:29'
                documentation_url:
                  type: string
                  example: >-
                    https://docs.fedoraproject.org/en-US/fedora/f29/system-administrators-guide/
                home_url:
                  type: string
                  example: 'https://fedoraproject.org/'
                id:
                  type: string
                  example: fedora
                logo:
                  type: string
                name:
                  type: string
                  example: Fedora
                platform_id:
                  type: string
                  example: 'platform:f29'
                pretty_name:
                  type: string
                  example: Fedora 29 (Workstation Edition)
                privacy_policy_url:
                  type: string
                  example: 'https://fedoraproject.org/wiki/Legal:PrivacyPolicy'
                redhat_bugzilla_product:
                  type: string
                  example: Fedora
                redhat_bugzilla_product_version:
                  type: string
                  example: '29'
                redhat_support_product:
                  type: string
                  example: Fedora
                redhat_support_product_version:
                  type: string
                  example: '29'
                support_url:
                  type: string
                  example: >-
                    https://fedoraproject.org/wiki/Communicating_and_getting_help
                variant:
                  type: string
                  example: Workstation Edition
                variant_id:
                  type: string
                  example: workstation
                version:
                  type: string
                  example: 29 (Workstation Edition)
                version_codename:
                  type: string
                version_id:
                  type: string
                  example: '29'
            runtime_environment:
              type: object
              description: Runtime environment information.
              additionalProperties: true
              properties:
                cuda_version:
                  type: string
                  description: CUDA version installed.
                  nullable: true
                hardware:
                  type: object
                  description: Hardware information.
                  properties:
                    cpu_family:
                      type: integer
                    cpu_model:
                      type: integer
                operating_system:
                  type: object
                  description: OS information.
                  properties:
                    name:
                      type: string
                    version:
                      type: string
                python_version:
                  type: string
                  description: Python interpreter version.
        parameters:
          type: object
          description: Parameters echoed back to user for debugging.
    InspectionSpecificationResponse:
      type: object
      description: Response for an inspection for the given inspection.
      additionalProperties: true
      required:
        - parameters
        - specification
      properties:
        parameters:
          type: object
          description: |
            Parameters echoed back to user (with default parameters if omitted).
        specification:
          $ref: '#/components/schemas/InspectionSpecification'
    VersionResponse:
      type: object
      description: A response with service version identifier.
      additionalProperties: false
      required:
        - version
        - service_version
      properties:
        version:
          type: string
          description: Version identifier.
        service_version:
          type: string
          description: Service version identifier.
    InspectionStatusResponse:
      type: object
      description: Status report about the current inspection Workflow.
      additionalProperties: false
      required:
        - status
        - parameters
      properties:
        parameters:
          type: object
          description: Parameters echoed back to user for debugging.
          additionalProperties: true
        status:
          $ref: '#/components/schemas/InspectionStatus'
    InspectionStatus:
      type: object
      description: Status of the current inspection workflow.
      additionalProperties: false
      required:
        - build
        - workflow
        - data_stored
      properties:
        build:
          type: object
          description: Status information for the inspection build.
          nullable: true
          additionalProperties: false
          required:
            - container
            - exit_code
            - finished_at
            - reason
            - started_at
            - state
          properties:
            container:
              type: string
              description: SHA of container image in which the inspection is done.
              nullable: true
            exit_code:
              type: integer
              description: >
                Return code of the process performing inspection (user supplied
                script return value).
              nullable: true
            finished_at:
              type: string
              description: >
                Datetime in ISO format informing about when the inspection has
                finished.
              nullable: true
            reason:
              type: string
              description: Reasoning on finished inspection run.
              nullable: true
            started_at:
              type: string
              description: >
                Datetime in ISO format informing about when the inspection has
                started.
              nullable: true
            state:
              type: string
              example: terminated
        workflow:
          type: object
          description: Status of the submitted inspection Workflow.
          additionalProperties: true
        data_stored:
          type: boolean
          description: A flag checking if any data were stored.
